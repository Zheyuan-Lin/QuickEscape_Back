<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.quickescapes.mappers.RoundTripMapper">
    <!-- Parameter Map for Budget Input -->
    <parameterMap id="budgetParam" type="java.math.BigDecimal">
        <parameter property="budget" />
    </parameterMap>

    <!-- Result Map for Round Trip Flights -->
    <resultMap id="RoundTripFlightResultMap" type="com.example.quickescapes.dao.RoundTrip">
        <id property="outTripId" column="out_trip_id" />
        <result property="outSummary" column="out_summary" />
        <result property="departureDate" column="departure_date" />
        <result property="departurePrice" column="departure_price" />
        <result property="returnTripId" column="return_trip_id" />
        <result property="returnSummary" column="return_summary" />
        <result property="returnDate" column="return_date" />
        <result property="returnPrice" column="return_price" />
        <result property="totalPrice" column="total_price" />
        <result property="destination" column="destination" />
    </resultMap>

    <!-- Result Map for Hotel Availability -->
    <resultMap id="HotelResultMap" type="com.example.model.Hotel">
        <id property="hotelId" column="hotel_id" />
        <result property="destination" column="destination" />
        <result property="hotelName" column="hotel_name" />
        <result property="hotelPrice" column="hotel_price" />
        <result property="checkInDate" column="check_in_date" />
        <result property="checkOutDate" column="check_out_date" />
    </resultMap>

    <!-- SQL Fragments for Reusable SQL Clauses -->
    <sql id="FlightConditions">
        SUBSTRING_INDEX(out_flight.summary, '-', -1) = SUBSTRING_INDEX(return_flight.summary, '-', 1)
        AND SUBSTRING_INDEX(out_flight.summary, '-', 1) = 'ATL'
        AND SUBSTRING_INDEX(return_flight.summary, '-', -1) = 'ATL'
        AND return_flight.trip_departure_dt &gt; out_flight.trip_departure_dt
    </sql>

    <sql id="HotelAvailabilityCondition">
        h.ci_date &lt;= rt.departure_date
        AND h.co_date >= rt.return_date
    </sql>

    <select id="findRoundTrip" parameterMap="budgetParam" resultMap="RoundTripFlightResultMap">
        SELECT
        out_flight.trip_id AS out_trip_id,
        out_flight.summary AS out_summary,
        out_flight.trip_departure_dt AS departure_date,
        out_flight.price AS departure_price,
        return_flight.trip_id AS return_trip_id,
        return_flight.summary AS return_summary,
        return_flight.trip_departure_dt AS return_date,
        return_flight.price AS return_price,
        (out_flight.price + return_flight.price) AS total_price
        FROM
        flights AS out_flight
        JOIN
        flights AS return_flight
        ON
        SUBSTRING_INDEX(out_flight.summary, '-', -1) = SUBSTRING_INDEX(return_flight.summary, '-', 1) tching arrival and departure
        AND return_flight.departure_date &gt; out_flight.departure_date
        WHERE
        (out_flight.price + return_flight.price) &lt;= #{2*{budget}/3}
        ORDER BY
        out_flight.departure_date, return_flight.departure_date
    </select>
    <!-- Query to Find Available Hotels Based on Destination -->
    <select id="findAvailableHotels" resultMap="HotelResultMap">
        SELECT
        h.id AS hotel_id,
        h.city_cd AS destination,
        h.hotel_nm AS hotel_name,
        h.price AS hotel_price,
        h.ci_date AS check_in_date,
        h.co_date AS check_out_date
        FROM
        hotels h
        JOIN
        RoundTripFlights rt ON h.city_cd = rt.destination
        WHERE
        <include refid="HotelAvailabilityCondition"/>
    </select>

    <!-- Main Query to Combine Flights and Hotels into an Itinerary -->
    <select id="buildItinerary" parameterMap="budgetParam" resultType="com.example.quickescapes.dao.RoundTrip">
        SELECT
        rt.out_trip_id,
        rt.out_summary AS outbound_flight,
        rt.departure_date,
        rt.departure_price,
        rt.return_trip_id,
        rt.return_summary AS return_flight,
        rt.return_date,
        rt.return_price,
        rt.total_price AS flight_total_price,
        h.hotel_id,
        h.hotel_name,
        h.hotel_price,
        h.check_in_date,
        h.check_out_date,
        (rt.total_price + h.hotel_price) AS total_itinerary_price
        FROM
        (SELECT * FROM findRoundTripFlightsWithinBudget) AS rt
        JOIN
        (SELECT * FROM findAvailableHotels) AS h ON rt.destination = h.destination
        WHERE
        (rt.total_price + h.hotel_price) &lt;= #{budget}
        ORDER BY
        rt.destination, rt.departure_date, h.hotel_price
    </select>



</mapper>
